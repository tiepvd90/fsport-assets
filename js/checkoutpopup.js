// ‚úÖ BI·∫æN TO√ÄN C·ª§C
window.cart = window.cart || [];
let shippingFee = 0;
let voucherValue = 0;

// ‚úÖ HI·ªÜN CHECKOUT POPUP
function showCheckoutPopup() {
  loadShippingFee();
  renderCheckoutCart();
  document.getElementById("checkoutPopup").classList.remove("hidden");
  document.getElementById("checkoutPopup").style.display = "flex";
  document.body.style.overflow = "hidden";
}

// ‚úÖ ·∫®N CHECKOUT POPUP
function hideCheckoutPopup() {
  document.getElementById("checkoutPopup").classList.add("hidden");
  document.getElementById("checkoutPopup").style.display = "none";
  document.body.style.overflow = "auto";
}

// ‚úÖ RENDER DANH S√ÅCH S·∫¢N PH·∫®M
function renderCheckoutCart() {
  const list = document.getElementById("checkoutCartList");
  list.innerHTML = "";

  if (!window.cart.length) {
    list.innerHTML = '<div class="cart-empty">Gi·ªè h√†ng c·ªßa b·∫°n hi·ªán ƒëang tr·ªëng</div>';
    return;
  }

  window.cart.forEach((item, index) => {
    const el = document.createElement("div");
    el.className = "cart-item";

    const hasVoucher = item.voucher?.amount;
    const priceText = item.Gi√°.toLocaleString() + "‚Ç´";
    const voucherHtml = hasVoucher
      ? `<span class="voucher-tag" style="background: rgba(0,160,230,0.6); color: white; font-size: 9px; padding: 2px 6px; margin-left: 6px; border-radius: 4px; vertical-align: middle;">Voucher: -${item.voucher.amount.toLocaleString()}‚Ç´</span>`
      : "";

    el.innerHTML = `
      <button class="remove-btn" onclick="removeItem(${index})">&times;</button>
      <img src="${item.·∫¢nh}" alt="img" />
      <div class="cart-item-details">
        <div class="cart-item-name">${item["Ph√¢n lo·∫°i"]}</div>
        <div class="cart-item-price-qty">
          <div class="cart-item-price">
            ${priceText} ${voucherHtml}
          </div>
          <div class="cart-item-qty">
            <button onclick="changeItemQty(${index}, -1)">‚àí</button>
            <span>${item.quantity}</span>
            <button onclick="changeItemQty(${index}, 1)">+</button>
          </div>
        </div>
      </div>
    `;
    list.appendChild(el);
  });

  updateCheckoutSummary();
}

function updateCheckoutSummary() {
  const subtotal = window.cart.reduce((sum, item) => sum + item.Gi√° * item.quantity, 0);
  const totalQty = window.cart.reduce((sum, item) => sum + item.quantity, 0);

  // ‚úÖ T√≠nh t·ªïng gi·∫£m t·ª´ voucher
  voucherValue = window.cart.reduce((sum, item) => sum + (item.voucher?.amount || 0) * item.quantity, 0);

  const shipping = shippingFee;
  const total = subtotal + shipping - voucherValue;

  const qtyEl = document.getElementById("itemQuantityText");
  const subtotalEl = document.getElementById("subtotalText");
  if (qtyEl) qtyEl.textContent = `(${totalQty} s·∫£n ph·∫©m)`;
  if (subtotalEl) subtotalEl.textContent = `${subtotal.toLocaleString()}‚Ç´`;

  document.getElementById("shippingFeeText").textContent = `${shipping.toLocaleString()}‚Ç´`;
  document.getElementById("voucherText").textContent = `-${voucherValue.toLocaleString()}‚Ç´`;
  document.getElementById("totalText").textContent = `${total.toLocaleString()}‚Ç´`;
}

// ‚úÖ TH√äM / B·ªöT S·ªê L∆Ø·ª¢NG
function changeItemQty(index, delta) {
  const item = window.cart[index];
  item.quantity = Math.max(1, item.quantity + delta);
  saveCart();
  renderCheckoutCart();
}

// ‚úÖ XO√Å ITEM
function removeItem(index) {
  window.cart.splice(index, 1);
  saveCart();
  renderCheckoutCart();
}

// ‚úÖ L∆ØU GI·ªé H√ÄNG V√ÄO localStorage
function saveCart() {
  localStorage.setItem("cart", JSON.stringify(window.cart));
}

// ‚úÖ LOAD GI·ªé H√ÄNG KHI M·ªû TRANG
function loadCart() {
  try {
    const data = JSON.parse(localStorage.getItem("cart"));
    if (Array.isArray(data)) window.cart = data;
  } catch (e) {
    console.warn("Kh√¥ng th·ªÉ load cart t·ª´ localStorage");
  }
}

// ‚úÖ T·∫¢I PH√ç V·∫¨N CHUY·ªÇN
function loadShippingFee() {
  fetch("https://friendly-kitten-d760ff.netlify.app/json/shippingfee.json")
    .then(res => res.json())
    .then(data => {
      const fees = window.cart.map(i => data[i.loai] || 0);
      shippingFee = Math.max(...fees, 0);
      updateCheckoutSummary();
    })
    .catch(err => {
      console.warn("Kh√¥ng th·ªÉ t·∫£i shippingfee.json:", err);
      shippingFee = 0;
      updateCheckoutSummary();
    });
}

// ‚úÖ G·ª¨I ƒê∆†N H√ÄNG
function submitOrder() {
  const name = document.getElementById("checkoutName")?.value.trim();
  const phone = document.getElementById("checkoutPhone")?.value.trim();
  const address = document.getElementById("checkoutAddress")?.value.trim();
  if (!name || !phone || !address) return alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin.");

  const orderData = {
    name,
    phone,
    address,
    items: window.cart,
    shippingFee,
    voucherValue,
    total: window.cart.reduce((sum, i) => sum + i.Gi√° * i.quantity, 0) + shippingFee - voucherValue
  };

  // üöß G·ª≠i ƒë·∫øn Make.com ho·∫∑c n∆°i x·ª≠ l√Ω
  // fetch('...', { method: 'POST', headers: {...}, body: JSON.stringify(orderData) });

  alert("C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng! Funsport s·∫Ω s·ªõm li√™n h·ªá.");
  window.cart = [];
  saveCart();
  hideCheckoutPopup();
}

// ‚úÖ BIND S·ª∞ KI·ªÜN KHI LOAD
window.addEventListener("DOMContentLoaded", () => {
  loadCart();
  document.getElementById("checkoutSubmitBtn")?.addEventListener("click", submitOrder);
});
