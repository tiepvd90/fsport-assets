// ===================================================
// ‚úÖ THANKS & UPSELL BRIDGE (V3 - Wait for Inject)
// - KH√îNG s·ª≠a checkoutpopup.js
// - ƒê·∫£m b·∫£o: n·∫øu showThankyouPopup() b·ªã g·ªçi TR∆Ø·ªöC khi HTML inject xong,
//   s·∫Ω ƒë·ª£i #thankyouPopup xu·∫•t hi·ªán r·ªìi m·ªõi hi·ªÉn th·ªã.
// - Upsell ch·ªâ hi·ªán khi window.productCategory === "pickleball"
// ===================================================

(function () {
  console.log("[thanksandupsell] module loaded");

  // ---- Config nhanh ----
  const HOOK_URL    = "https://hook.eu2.make.com/your-upsell-hook-id"; // üîÅ thay b·∫±ng hook th·∫≠t
  const COMBO_PRICE = 130000;
  const UNIT_PRICE  = 26000;
  const QUANTITY    = 5;

  // ---- Helpers ----
  function $id(id) { return document.getElementById(id); }
  function refreshRefs() {
    return {
      popup:       $id("thankyouPopup"),
      upsellBlock: $id("upsellBlock"),
      upsellBtn:   $id("upsellBtn"),
      upsellStatus:$id("upsellStatus"),
    };
  }
  function applyCriticalOverlayStyles(popup) {
    if (!popup) return;
    popup.style.position = "fixed";
    popup.style.inset = "0";
    popup.style.background = "rgba(0,0,0,.6)";
    popup.style.zIndex = "99999";
    popup.style.display = "flex";
    popup.style.alignItems = "center";
    popup.style.justifyContent = "center";
  }
  function showUpsellAccordingToCategory(refs) {
    const pageCat = (window.productCategory || "").toLowerCase();
    if (!refs.upsellBlock) return;
    if (pageCat === "pickleball") {
      refs.upsellBlock.classList.remove("hidden");
    } else {
      refs.upsellBlock.classList.add("hidden");
    }
  }
  function resetUpsellUI(refs) {
    if (refs.upsellStatus) refs.upsellStatus.classList.add("hidden");
    if (refs.upsellBtn) {
      refs.upsellBtn.disabled = false;
      refs.upsellBtn.textContent = "TH√äM COMBO 5 B√ìNG ‚Äì 130.000‚Ç´";
    }
  }

  // ---- ƒê·ª£i #thankyouPopup xu·∫•t hi·ªán (do inject async) ----
  function waitForPopup(timeoutMs = 3000) {
    return new Promise((resolve) => {
      const { popup } = refreshRefs();
      if (popup) return resolve(true);

      const start = Date.now();
      const iv = setInterval(() => {
        const ok = !!$id("thankyouPopup");
        const expired = Date.now() - start > timeoutMs;
        if (ok || expired) {
          clearInterval(iv);
          resolve(ok);
        }
      }, 40);
    });
  }

  // ---- B·ªçc c√°c h√†m global c≈© n·∫øu t·ªìn t·∫°i, n·∫øu ch∆∞a c√≥ th√¨ t·∫°o ----
  const originalShow = window.showThankyouPopup;
  const originalHide = window.hideThankyouPopup;

  window.showThankyouPopup = async function () {
    // 1) ƒê·ª£i HTML inject xong
    const ready = await waitForPopup();
    const refs = refreshRefs();

    if (!ready || !refs.popup) {
      console.warn("[thanksandupsell] #thankyouPopup not found after waiting");
      // fallback: n·∫øu c√≥ h√†m c≈© th√¨ g·ªçi, n·∫øu kh√¥ng th√¨ th√¥i
      if (typeof originalShow === "function") originalShow();
      return;
    }

    // 2) G·ªçi h√†m c≈© ƒë·ªÉ gi·ªØ h√†nh vi (inline display:flex + lock scroll)
    if (typeof originalShow === "function") {
      originalShow();
    } else {
      // ho·∫∑c t·ª± b·∫≠t n·∫øu ch∆∞a c√≥ h√†m c≈©
      applyCriticalOverlayStyles(refs.popup);
      document.body.style.overflow = "hidden";
    }

    // 3) √Åp logic upsell + reset UI
    resetUpsellUI(refs);
    showUpsellAccordingToCategory(refs);

    // 4) L∆∞u info kh√°ch (d√πng cho upsell)
    try {
      window._lastCustomerInfo = JSON.parse(localStorage.getItem("checkoutInfo") || "{}");
    } catch { window._lastCustomerInfo = {}; }
  };

  window.hideThankyouPopup = function () {
    const refs = refreshRefs();
    if (typeof originalHide === "function") {
      return originalHide();
    }
    // Fallback
    if (refs.popup) refs.popup.style.display = "none";
    document.body.style.overflow = "auto";
  };

  // ---- G·∫Øn handler cho n√∫t upsell (sau khi HTML ƒë√£ inject) ----
  (function bindUpsellButtonWithRetry() {
    // G·∫Øn ngay n·∫øu ƒë√£ c√≥
    let refs = refreshRefs();
    if (refs.upsellBtn) {
      attach();
      return;
    }
    // N·∫øu ch∆∞a c√≥ (do inject mu·ªôn), retry ng·∫Øn
    const start = Date.now();
    const iv = setInterval(() => {
      refs = refreshRefs();
      if (refs.upsellBtn || Date.now() - start > 3000) {
        clearInterval(iv);
        if (refs.upsellBtn) attach();
      }
    }, 60);

    function attach() {
      refs.upsellBtn.addEventListener("click", function () {
        if (refs.upsellBtn.disabled) return;

        const payload = {
          id: "bongthidau",
          name: (window._lastCustomerInfo && window._lastCustomerInfo.name) || "",
          phone: (window._lastCustomerInfo && window._lastCustomerInfo.phone) || "",
          address: (window._lastCustomerInfo && window._lastCustomerInfo.address) || "",
          quantity: QUANTITY,
          price: UNIT_PRICE,
          total: COMBO_PRICE,
          source: "thankyouPopup-upsell",
        };

        fetch(HOOK_URL, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload),
        })
        .then(function () {
          refs.upsellBtn.textContent = "ƒê√É TH√äM COMBO";
          refs.upsellBtn.disabled = true;
          refs.upsellStatus && refs.upsellStatus.classList.remove("hidden");
        })
        .catch(function (err) {
          console.error("‚ùå L·ªói upsell:", err);
          alert("C√≥ l·ªói khi th√™m s·∫£n ph·∫©m upsell. Vui l√≤ng th·ª≠ l·∫°i sau.");
        });
      });
    }
  })();

})();
