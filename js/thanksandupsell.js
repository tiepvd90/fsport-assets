// ===================================================
// ‚úÖ THANKS & UPSELL MODULE (FINAL)
// - Popup duy nh·∫•t: lu√¥n c√≥ kh·ªëi "C·∫£m ∆°n" t·ªëi gi·∫£n (b√™n d∆∞·ªõi)
// - N·∫øu category === "pickleball" ‚Üí hi·ªÉn th·ªã th√™m kh·ªëi upsell b√≥ng (·ªü TR√äN)
// - T∆∞∆°ng th√≠ch vi·ªác inject HTML mu·ªôn qua fetch("/html/thanksandupsell.html")
// - Gi·ªØ t∆∞∆°ng th√≠ch v·ªõi code c≈©: showThankyouPopup()/hideThankyouPopup()
// ===================================================

(function () {
  // ====== C·∫•u h√¨nh nhanh ======
  const CONFIG = {
    UPSOLD_ID: "bongthidau",
    UNIT_PRICE: 26000,        // gi√° 1 b√≥ng
    QUANTITY: 5,              // combo 5 b√≥ng
    TOTAL_PRICE: 130000,      // gi√° combo sau ∆∞u ƒë√£i
    // üîÅ THAY b·∫±ng hook upsell th·ª±c t·∫ø c·ªßa b·∫°n:
    HOOK_URL: "https://hook.eu2.make.com/your-upsell-hook-id",
    BTN_LABEL_DEFAULT: "TH√äM COMBO 5 B√ìNG ‚Äì 130.000‚Ç´",
    BTN_LABEL_DONE: "ƒê√É TH√äM COMBO",
    INJECT_TIMEOUT_MS: 2500,  // th·ªùi gian ƒë·ª£i HTML ƒë∆∞·ª£c inject (ms)
  };

  // ====== Tham chi·∫øu DOM (lu√¥n l√†m t∆∞∆°i khi d√πng) ======
  const refs = {};
  function refreshRefs() {
    refs.popup = document.getElementById("thankyouPopup");
    refs.upsellBlock = document.getElementById("upsellBlock");
    refs.upsellBtn = document.getElementById("upsellBtn");
    refs.upsellStatus = document.getElementById("upsellStatus");
  }

  // Ch·ªù HTML ƒë√£ ƒë∆∞·ª£c inject v√†o DOM (n·∫øu load mu·ªôn)
  function ensureInjected(timeoutMs = CONFIG.INJECT_TIMEOUT_MS) {
    return new Promise((resolve) => {
      refreshRefs();
      if (refs.popup) return resolve(true);

      const start = Date.now();
      const iv = setInterval(() => {
        refreshRefs();
        const ok = !!refs.popup;
        const expired = Date.now() - start > timeoutMs;
        if (ok || expired) {
          clearInterval(iv);
          resolve(ok);
        }
      }, 50);
    });
  }

  // ====== State ======
  let hasUpsellBeenClicked = false;

  // ====== Helpers ======
  function getEffectiveCategory(category) {
    return (category || window.productCategory || "").toLowerCase();
  }

  function resetUpsellUI() {
    const { upsellBlock, upsellBtn, upsellStatus } = refs;
    if (upsellBlock) upsellBlock.classList.add("hidden");
    if (upsellStatus) upsellStatus.classList.add("hidden");
    if (upsellBtn) {
      upsellBtn.disabled = false;
      upsellBtn.innerText = CONFIG.BTN_LABEL_DEFAULT;
    }
    hasUpsellBeenClicked = false;
  }

  // ===================================================
  // üß† SHOW: m·ªü popup c·∫£m ∆°n + upsell (n·∫øu pickleball)
  // ===================================================
  async function show({ category = "", name = "", phone = "", address = "" } = {}) {
    const injected = await ensureInjected();
    if (!injected) {
      console.warn("[thanksAndUpsell] Kh√¥ng t√¨m th·∫•y #thankyouPopup. Ki·ªÉm tra /html/thanksandupsell.html ƒë√£ ƒë∆∞·ª£c inject.");
      return;
    }

    const popup = refs.popup;
    const upsellBlock = refs.upsellBlock;

    // Reset UI m·ªói l·∫ßn m·ªü
    resetUpsellUI();

    // Ch·ªâ hi·ªán upsell khi ƒë√∫ng category
    const effectiveCategory = getEffectiveCategory(category);
    if (effectiveCategory === "pickleball" && upsellBlock) {
      upsellBlock.classList.remove("hidden");
    }

    // M·ªü popup
    popup.style.display = "flex";
    document.body.style.overflow = "hidden";

    // L∆∞u th√¥ng tin kh√°ch ƒë·ªÉ g·ª≠i upsell
    window._lastCustomerInfo = { name, phone, address };
  }

  // ===================================================
  // üßº HIDE: ƒë√≥ng popup
  // ===================================================
  function hide() {
    refreshRefs();
    if (refs.popup) refs.popup.style.display = "none";
    document.body.style.overflow = "auto";
  }

  // ===================================================
  // üöÄ HANDLE UPSELL ORDER: g·ª≠i mua combo b√≥ng
  // ===================================================
  function handleUpsellOrder() {
    refreshRefs();
    const upsellBtn = refs.upsellBtn;
    const upsellStatus = refs.upsellStatus;

    if (hasUpsellBeenClicked) return;
    hasUpsellBeenClicked = true;

    const upsellData = {
      id: CONFIG.UPSOLD_ID,
      name: window._lastCustomerInfo?.name || "",
      phone: window._lastCustomerInfo?.phone || "",
      address: window._lastCustomerInfo?.address || "",
      quantity: CONFIG.QUANTITY,
      price: CONFIG.UNIT_PRICE,
      total: CONFIG.TOTAL_PRICE,
      source: "thankyouPopup-upsell",
    };

    fetch(CONFIG.HOOK_URL, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(upsellData),
    })
      .then(() => {
        if (upsellBtn) {
          upsellBtn.innerText = CONFIG.BTN_LABEL_DONE;
          upsellBtn.disabled = true;
        }
        if (upsellStatus) upsellStatus.classList.remove("hidden");
      })
      .catch((err) => {
        console.error("‚ùå L·ªói g·ª≠i ƒë∆°n upsell:", err);
        alert("C√≥ l·ªói khi th√™m s·∫£n ph·∫©m upsell. Vui l√≤ng th·ª≠ l·∫°i sau.");
        hasUpsellBeenClicked = false;
      });
  }

  // ===================================================
  // üåâ Bridge t∆∞∆°ng th√≠ch: gi·ªØ nguy√™n code c≈© g·ªçi showThankyouPopup()
  // ===================================================
  window.showThankyouPopup = function () {
    try {
      const saved = JSON.parse(localStorage.getItem("checkoutInfo") || "{}");
      window.thanksAndUpsell?.show({
        // category s·∫Ω t·ª± l·∫•y t·ª´ window.productCategory n·∫øu kh√¥ng truy·ªÅn
        name: saved.name || "",
        phone: saved.phone || "",
        address: saved.address || "",
      });
    } catch {
      window.thanksAndUpsell?.show();
    }
  };

  window.hideThankyouPopup = function () {
    window.thanksAndUpsell?.hide();
  };

  // ===================================================
  // üîÅ Export module
  // ===================================================
  window.thanksAndUpsell = { show, hide, handleUpsellOrder };
})();
